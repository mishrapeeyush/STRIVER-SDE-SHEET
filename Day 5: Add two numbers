/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode *head=new ListNode(-1);
        ListNode *temp=head;
        int carry=0;
        int sum=0;
        
        while(l1&&l2)
        {
            sum=l1->val+l2->val+carry;
            if(sum>9)
            {
                carry=1;
                sum=sum-10;
            }
            else
                carry=0;
            
            ListNode *tempNode=new ListNode(sum);
            temp->next=tempNode;
            temp=temp->next;
            l1=l1->next;
            l2=l2->next;
        }
        
        while(l1)
        {
            sum=l1->val+carry;
            if(sum>9)
            {
                carry=1;
                sum=sum-10;
            }
            else
                carry=0;
            
            ListNode *tempNode=new ListNode(sum);
            temp->next=tempNode;
            temp=temp->next;
            l1=l1->next;
        }
        
        while(l2)
        {
            sum=l2->val+carry;
            if(sum>9)
            {
                carry=1;
                sum=sum-10;
            }
            else
                carry=0;
            
            ListNode *tempNode=new ListNode(sum);
            temp->next=tempNode;
            temp=temp->next;
            l2=l2->next;
        }
        
        if(carry==1)
        {
            ListNode *last=new ListNode(1);
            temp->next=last;
        }

        return head->next;
    }
};
