/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *detectCycle(ListNode *head) {
        if(!head) return NULL;
        if(!head->next)return NULL;
        
        ListNode* slow=head,*fast=head;
        bool flag=false;
        while(fast&&fast->next)
        {
           
            slow=slow->next;
            fast=fast->next->next;
             if(slow==fast)
            {
                flag=true;
                break;
            }
        }
        if(flag==false)
            return NULL;
        
        ListNode *temp=head;
        while(temp)
        {
            if(temp==slow)return temp;
            temp=temp->next;
            slow=slow->next;
        }
        return NULL;
    }
};
