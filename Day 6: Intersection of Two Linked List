/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        int l1=0,l2=0;
        
        ListNode *head1=headA;
        ListNode *head2=headB;
        
        while(headA)
        {
            l1++;
            headA=headA->next;
        }
        
         while(headB)
        {
            l2++;
            headB=headB->next;
        }
        
        if(l1>l2)
        {
            int dif=l1-l2;
            int i=0;
            while(i<dif)
            {
                head1=head1->next;
                i++;
            }
        }
        
         else if(l1<l2)
        {
            int dif=l2-l1;
            int i=0;
            while(i<dif)
            {
                head2=head2->next;
                i++;
            }
        }
        
        while(head1&&head2)
        {
            if(head1==head2)
                return head1;
            head1=head1->next;
            head2=head2->next;
        }
        return NULL;
    }
};
