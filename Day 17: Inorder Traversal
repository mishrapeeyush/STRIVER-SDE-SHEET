//Recursive Solution

class Solution {
public:
    void inorder(TreeNode* root, vector<int>&v)
    {
        if(!root)
            return;
        
        inorder(root->left,v);
        v.push_back(root->val);
        inorder(root->right,v);
    }
    vector<int> inorderTraversal(TreeNode* root) {
           
        vector<int>v;
        inorder(root,v);
        return v;
    }
};



//Iterative using Stacks

class Solution {
public:
    vector<int> inorderTraversal(TreeNode* root) {
        TreeNode* head=root;
        stack<TreeNode*>st;
        vector<int>v;
        
        while(true)
        {
            if(root)
            {
                st.push(root);
                root=root->left;
            }
            
            else
            {
                if(st.empty()==true)
                    break;
                
                root=st.top();
                st.pop();
                v.push_back(root->val);
                root=root->right;
            }
        }
        return v;
    }
};
